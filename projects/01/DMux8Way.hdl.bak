// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/DMux8Way.hdl

/**
 * 8-way demultiplexor:
 * {a, b, c, d, e, f, g, h} = {in, 0, 0, 0, 0, 0, 0, 0} if sel == 000
 *                            {0, in, 0, 0, 0, 0, 0, 0} if sel == 001
 *                            etc.
 *                            {0, 0, 0, 0, 0, 0, 0, in} if sel == 111
 */

CHIP DMux8Way {
    IN in, sel[3];
    OUT a, b, c, d, e, f, g, h;

    PARTS:
    // invert selector bits
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    Not(in=sel[2], out=notsel2);
    // selectors for each binary signature
    And3Way(in[0]=notsel0, in[1]=notsel1, in[2]=notsel2, out=sela);
    And3Way(in[0]=sel[0], in[1]=notsel1, in[2]=notsel2, out=selb);
    And3Way(in[0]=notsel0, in[1]=sel[1], in[2]=notsel2, out=selc);
    And3Way(in[0]=sel[0], in[1]=sel[1], in[2]=notsel2, out=seld);
    And3Way(in[0]=notsel0, in[1]=notsel1, in[2]=sel[2], out=sele);
    And3Way(in[0]=sel[0], in[1]=notsel1, in[2]=sel[2], out=self);
    And3Way(in[0]=notsel0, in[1]=sel[1], in[2]=sel[2], out=selg);
    And3Way(in[0]=sel[0], in[1]=sel[1], in[2]=sel[2], out=selh);
    // And DMux's
    And(a=sela, b=in, out=a);
    And(a=selb, b=in, out=b);
    And(a=selc, b=in, out=c);
    And(a=seld, b=in, out=d);
    And(a=sele, b=in, out=e);
    And(a=self, b=in, out=f);
    And(a=selg, b=in, out=g);
    And(a=selh, b=in, out=h);
}
